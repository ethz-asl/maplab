package vi_map.proto;

import "aslam/common/id.proto";
import "aslam-serialization/visual-frame.proto";
import "vi-map/sensor_resources.proto";

message FileTypeWithPath {
  optional int32 file_type = 1;
  optional string path = 2;
}

message VIMapMetadata {
  repeated FileTypeWithPath files = 1;
}

message Absolute6DoFMeasurement {
  optional int64 timestamp_ns = 1;
  optional aslam.proto.Id sensor_id = 2;
  repeated double T_G_S = 3;
  repeated double T_G_S_covariance = 4;
}

message ViwlsVertex {
  repeated aslam.proto.Id incoming = 1;
  repeated aslam.proto.Id outgoing = 2;

  repeated double T_M_I = 3;
  repeated double v_M = 4;
  repeated double accel_bias = 5;
  repeated double gyro_bias = 6;

  optional aslam.proto.VisualNFrame n_visual_frame = 7;
  optional LandmarkStore landmark_store = 8;
  repeated FrameResourceMap resource_map = 9;
  optional aslam.proto.Id mission_id = 14;

  repeated Absolute6DoFMeasurement absolute_6dof_measurements = 15;
}

message ViwlsEdge {
  optional aslam.proto.Id from = 1;
  optional aslam.proto.Id to = 2;
  repeated int64 imu_timestamps = 3;
  repeated double imu_data = 4;
  optional aslam.proto.Id mission_id = 5;
}

message TransformationEdge {
  optional aslam.proto.Id from = 1;
  optional aslam.proto.Id to = 2;
  optional aslam.proto.Id mission_id = 3;
  repeated double T_A_B = 4;
  repeated double T_A_B_covariance = 5;
  optional aslam.proto.Id sensor_id = 6;
}

message CklamEdge {
  optional aslam.proto.Id from = 1;
  optional aslam.proto.Id to = 2;
  optional aslam.proto.Id mission_id = 3;
  repeated double b = 4;
  repeated double A = 5;
  repeated double keyframe_T_G_B_from = 6;
  repeated double keyframe_T_G_B_to = 7;
}

message LoopclosureEdge {
  optional aslam.proto.Id from = 1;
  optional aslam.proto.Id to = 2;
  optional aslam.proto.Id mission_id = 3;
  repeated double T_A_B = 4;
  repeated double T_A_B_covariance = 5;
  optional double switch_variable = 6;
  optional double switch_variable_variance = 7;
}

message Edge {
  optional ViwlsEdge viwls = 1;
  optional TransformationEdge odometry = 2;
  optional LoopclosureEdge loopclosure = 3;
  optional TransformationEdge transformation = 4;
  optional TransformationEdge wheel_odometry = 7;
}

message Landmark {
  optional aslam.proto.Id id = 1;
  repeated double position = 2;
  repeated double covariance = 3;
  repeated aslam.proto.Id vertex_ids = 4;
  repeated uint32 keypoint_indices = 5;
  repeated uint32 frame_indices = 6;
  enum Quality {
    kUnknown = 0;
    kBad = 1;
    kGood = 2;
  }
  optional Quality quality = 7 [default = kUnknown];
}

message LandmarkStore {
  repeated Landmark landmarks = 1;
}

message Mission {
  optional aslam.proto.Id baseframe_id = 1;
  optional aslam.proto.Id root_vertex_id = 2;

  enum BackBone {
    kViwls = 0;
    kOdometry = 1;
  }
  optional BackBone backbone = 3 [default = kViwls];

  repeated aslam.proto.Id mission_resource_ids = 4;
  repeated int32 mission_resource_types = 5;

  /* NOTE: 6 was removed */

  repeated sensor_resources.proto.StampedSensorResourceId sensor_resources = 7;

  optional aslam.proto.Id ncamera_id = 8;
  optional aslam.proto.Id imu_id = 9;
  optional aslam.proto.Id lidar_id = 10;
  optional aslam.proto.Id odometry_6dof_id = 11;
  optional aslam.proto.Id loop_closure_id = 12;
  optional aslam.proto.Id absolute_6dof_id = 13;
  optional aslam.proto.Id detection_id = 14;
  optional aslam.proto.Id wheel_odometry_id = 15;
  optional aslam.proto.Id pointcloud_map_id = 16;
}

message MissionBaseframe {
  repeated double T_G_M = 1;
  repeated double T_G_M_covariance = 2;
  optional bool is_T_G_M_known = 3;
}

message ResourceInfo {
  optional uint32 type = 1;
  optional uint32 uri_format = 2;
  optional string uri = 3;
  optional aslam.proto.Id mission_id = 4;
}

message FrameResourceMap {
  repeated ResourceTypeMap resource_type_map = 1;
}

message ResourceTypeMap {
  optional uint32 type = 1;
  repeated aslam.proto.Id resource_ids = 2;
}

message LandmarkToVertexReference {
  optional aslam.proto.Id vertex_id = 1;
  optional aslam.proto.Id landmark_id = 2;
}

message StampedTransformation {
  required int64 timestamp_ns = 1;
  repeated double T_A_B = 2;
}

message DenseSubmap {
  optional aslam.proto.Id mission_id = 1;
  optional aslam.proto.Id sensor_id = 2;
  repeated StampedTransformation stamped_T_S0_S = 3;
}

message VIMap {
  repeated aslam.proto.Id vertex_ids = 1;
  repeated ViwlsVertex vertices = 2;

  repeated aslam.proto.Id edge_ids = 3;
  repeated Edge edges = 4;

  repeated aslam.proto.Id mission_ids = 5;
  repeated Mission missions = 6;

  repeated aslam.proto.Id mission_base_frame_ids = 7;
  repeated MissionBaseframe mission_base_frames = 8;

  repeated aslam.proto.Id landmark_index_ids = 9;
  repeated LandmarkToVertexReference landmark_index = 10;

  repeated aslam.proto.Id dense_submap_ids = 11;
  repeated DenseSubmap dense_submaps = 12;
}
