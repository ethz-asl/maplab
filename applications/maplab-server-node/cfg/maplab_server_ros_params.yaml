# MAPLAB SERVER CONFIGURATION

# THREADING
###########
num_hardware_threads:                                                 4 # Set in between num cores and num threads.

# INPUT / OUTPUT
############################
maplab_server_backup_interval_s:                                      300
maplab_server_merged_map_folder:                                      /tmp/maplab_server/merged_map
overwrite:                                                            true
maplab_server_map_update_topic:                                       map_update_notification

# BASE FRAME ALIGNMENT / MAP ANCHORING
######################################
# If enabled, the first mission will be the anchor and the baseframe will
# be set to known. Only use this if no absolute pose constraints are present.
maplab_server_set_first_robot_map_baseframe_to_known:                 true # Default true

# ABSOLUTE POSE CONSTRAINTS OUTLIER REJECTION
#############################################
# If enabled, the submap processing will after optimization run
# RANSAC LSQ on the absolute pose constraints to remove outliers.
maplab_server_remove_outliers_in_absolute_pose_constraints:           false
# Minimum number of constraints to allow for baseframe alignment or consistency checking.
# If a submap has less constraints than that do nothing, since we cannot determine
# inlier from outliers.
abs_constraints_baseframe_min_number_of_constraints:                  3
# Minimum inlier ratio for successful mission to absolute reference
# alignment. If this is not met, we cannot determine inliers.
abs_constraints_baseframe_min_inlier_ratio:                           0.5
# Maximum orientation error for inliers for mission baseframe RANSAC.
abs_constraints_baseframe_ransac_max_orientation_error_rad:           0.0872 # 5deg
# Maximum position error for inliers for mission baseframe RANSAC.
abs_constraints_baseframe_ransac_max_position_error_m:                0.5
# Maximum number of iterations for mission baseframe RANSAC.
abs_constraints_baseframe_ransac_num_interations:                     2000

# VISUAL LOOP CLOSURE
#####################
# NOTE These parameters influence intra, inter mission visual loop closure and
# vision-based map anchoring!
# If enabled, only landmarks labeled as 'good' are considered for loop closure
lc_filter_underconstrained_landmarks:                                 true # Default true
lc_ransac_pixel_sigma:                                                2.0 # Default 2.0
lc_min_inlier_count:                                                  10 # Default 10
lc_min_inlier_ratio:                                                  0.2 # Default 0.2
lc_num_ransac_iters:                                                  100 # Default 100
# If nonlinear refinement on all ransac inliers should be run.
lc_nonlinear_refinement_p3p:                                          false # Default false
# If enabled, the visual loop closure will not merge the landmarks, but add a
# loop closure edge. This is more powerful but less accurate, as for loop
# closures with a high error merged landmarks are likely to be discarded as
# outliers.
lc_insert_lc_edge_instead_of_merging:                                 false # Default false
# The variance for the switch variable of the visual loop-closure edges.
lc_switch_variable_variance:                                          1e-8 # Default 1e-8
# Scaling the covariance of visual loop closure edges. It is identity by default.
lc_edge_covariance_scaler:                                            1e-7 # Default 1e-7
# The minimum loop-closure gap distance such that a visual loop closure edge
# is created.
lc_edge_min_distance_meters:                                          1.0 # Default 1.0
# The minimum loop-closure inlier ratio to add a visual loop closure edge.
lc_edge_min_inlier_ratio:                                             0.5 # Default 0.5
# The minimum loop-closure inlier count to add a loop-closure edge.
lc_edge_min_inlier_count:                                             20 # Default 20

# DENSE MAPPING CONSTRAINTS/LOOP CLOSURES
#########################################
# Enable/disable dense mapping constraints based loop closure
maplab_server_enable_lidar_loop_closure:                              false # Default true
# Type of resource that are used to derive the dense mapping constraints, this
# can be a CSV list of values. Meaningful options are:
# kPointCloudXYZI = 21                    (Attaching raw VLP16/OS-1 lidar scans)
# kPointCloudXYZL = 24                    (Attaching LOAM features)
dm_resource_types:                                                    "21,24"
# Size of voxel grid downsampling on the point clouds to derive mapping constraints.
regbox_pcl_downsample_leaf_size_m:                                    0.1
# Enable/disable dense mapping constraint search modes:
# Add constraints for consecutive point clouds.
dm_candidate_search_enable_intra_mission_consecutive:                 true # Default true
dm_candidate_search_consecutive_max_delta_time_s:                     20 # Default 20.0
dm_candidate_search_consecutive_max_delta_position_m:                 5.0 # Default 5.0
dm_candidate_search_consecutive_max_delta_rotation_deg:               180 # Default 180
# Add constraints for consecutive nearby point clouds.
dm_candidate_search_enable_intra_mission_proximity:                   true # Default true
dm_candidate_search_enable_inter_mission_proximity:                   true # Default true
dm_candidate_search_proximity_max_delta_position_m:                   2.0 # Default 2.0
dm_candidate_search_proximity_max_delta_rotation_deg:                 180.0 # Default 180.0
dm_candidate_search_proximity_min_distance_along_graph_m:             2.0 # Default 1.0
dm_candidate_search_proximity_take_closest_n_candidates:              3 # Default 3
# Add constraints between global point cloud matches - NOT IMPLEMENTED YET
dm_candidate_search_enable_intra_mission_global:                      false # Default false
dm_candidate_search_enable_inter_mission_global:                      false # Default false
# Decide which constraints to recompute when calling the function iteratively,
# as it is done in the server.
dm_candidate_selection_recompute_all_constraints:                     false # Default false
dm_candidate_selection_recompute_invalid_constraints:                 true # Default true
dm_candidate_selection_min_switch_variable_value:                     0.5 # Default 0.5
# Alignment sanity checks.
dm_candidate_alignment_max_delta_position_to_initial_guess_m:         0.5 # Default 0.5
dm_candidate_alignment_max_delta_rotation_to_initial_guess_deg:       10 # Default 10
# Initialization of loop closure constraints
dm_constraint_switch_variable_sigma:                                  1e-3 # Default 1e-3


# VISUAL LOOP CLOSURE BASED MAP ANCHORING
#########################################
# Enable/disable visual loop closure
maplab_server_enable_visual_loop_closure:                             true # Default true
# Enable/disable vision based map anchoring
maplab_server_enable_visual_loop_closure_based_map_anchoring:         true # Default true
# Minimum inlier ratio for successful vision-based map anchoring.
lc_mission_baseframe_min_inlier_ratio:                                0.2   # Default 0.2
# Maximum orientation error for inliers for vision-based map anchoring.
lc_mission_baseframe_ransac_max_orientation_error_rad:                0.174 # Default 0.174
# Maximum position error for inliers for vision-based map anchoring.
lc_mission_baseframe_ransac_max_position_error_m:                     2.0   # Default 2.0
# Maximum number of iterations for mission baseframe RANSAC.
lc_mission_baseframe_ransac_num_interations:                          2000  # Default 2000
# Minimum median inlier ration required for a successful (rigid) map alignment/anchoring.
map_anchoring_min_medial_inlier_ratio:                                0.2 # Default 0.2
# Minimum number of vertex links for a successful (rigid) map alignment/anchoring.
map_anchoring_min_num_vertex_links:                                   5 # Default 10

# DENSE MAP
###########
# If enabled, the depth integrator, that is used to visualize/build the dense map
# is only accumulating point clouds of missions with known baseframe, i.e.
# missions that either have absolute 6dof constraints (e.g. AprilTag) or
# have been successfully anchored using visual loop closure.
dense_depth_integrator_visualize_only_with_known_baseframe:           true
# Type of resources that are used to compose the dense map, options are:
# kRawDepthMap = 8                        (Attaching lidar scans as depth maps)
# kPointCloudXYZI = 21                    (Attaching raw VLP16/OS-1 lidar scans)
# kPointCloudXYZL = 24                    (Attaching LOAM features)
maplab_server_dense_map_resource_type:                                21
# This will only publish the closest point cloud of each vertex, this way,
# keyframing has also an effect on the dense map and large errors in case
# of inaccurate imu data are prevented.
dense_depth_integrator_use_closest_to_vertex:                         true
dense_depth_integrator_enable_sigint_breaker:                         false

# VISUAL LANDMARKS
#################
# Settings for the default submap processing commands:
# ELQ (evaluate landmark quality)
# needs to be set because due to keyframing the default value is way to strict
vi_map_landmark_quality_min_observers:                                2   # Default 4
vi_map_landmark_quality_max_distance_from_closest_observer:           20  # Default 40m
vi_map_landmark_quality_min_distance_from_closest_observer:           0.1 # Default 0.05m
vi_map_landmark_quality_min_observation_angle_deg:                    5   # Default 5deg

# OPTIMIZATION
##############
# limit the number of iterations to keep this lightweight, also if the number
# of iterations are significantly increased, this can have weird effects as the
# optimization does not have a robust abort criterion.
ba_num_iterations:                                                    5
ba_max_time_seconds:                                                  180
ba_enable_signal_handler:                                             false
ba_hide_iterations_console_output:                                    true
ba_include_visual:                                                    true
ba_include_inertial:                                                  true
ba_include_loop_closure_edges:                                        false
ba_include_absolute_pose_constraints:                                 false
ba_include_6dof_odometry:                                             false
# This is useful to allow the absolute pose constraints to directly influence
# the baseframe rather than aligning the map by moving around the vertices themselves.
ba_absolute_pose_sensor_fix_mission_baseframes:                       false
# If enabled, the trust regions of the last iteration is used as initial
# trust region for the next time the global optimization is run.
maplab_server_preserve_trust_region_radius_across_merging_iterations: true
# The trust region radius of the optimization is preserved between iterations
# of the merging thread. But since there are always new submaps being added,
# we might want to reset the trust radius to keep it from getting to small or
# too large (which can prevent convergence). 0 disables resetting.
maplab_server_reset_trust_region_radius_every_nth_submap:             0
# If enabled and a new robot has started streaming to the maplab server we
# reset the trust region radius to the default initial value.
maplab_server_reset_trust_region_radius_if_new_robot:                 true

# STATIONARY SUBMAP FIX
#######################
# If enabled, a simple check will be performed to determine if a submap is
# stationary and if it is, the first and last vertex will be constrained
# with a lc edge.
maplab_server_stationary_submaps_fix_with_lc_edge:                    false
maplab_stationary_submaps_max_translation_m:                          0.20
maplab_stationary_submaps_max_rotation_rad:                           0.18

# TF FRAMES
###########
tf_map_frame:                                                         map
tf_mission_frame:                                                     maplab_mission
tf_abs_6dof_sensor_frame:                                             maplab_abs_6dof_sensor_frame
tf_odometry_6dof_sensor_frame:                                        maplab_odometry_6dof_sensor
tf_wheel_odometry_sensor_frame:                                       maplab_wheel_odometry_sensor
tf_lc_sensor_frame:                                                   maplab_lc_sensor
tf_lidar_sensor_frame:                                                maplab_lidar_sensor
tf_pointcloud_map_frame:                                              maplab_pointcloud_map
tf_gps_wgs_sensor_frame:                                              maplab_gps_wgs_sensor
tf_gps_utm_sensor_frame:                                              maplab_gps_utm_sensor
tf_imu_frame:                                                         maplab_imu
tf_camera_frame:                                                      maplab_camera
tf_ncamera_frame:                                                     maplab_ncamera
tf_imu_refined_frame:                                                 maplab_imu_refined

# DEBUGGING AND VISUALIZATION
#############################
# If enabled, no consistency checks are run.
disable_consistency_check:                                            true
alsologtostderr:                                                      true
colorlogtostderr:                                                     true
v: 0
vis_default_namespace:                                                maplab_server_rviz
show_progress_bar:                                                    false
